from telebot import TeleBot
from telebot import types
from random import randint
from mainOOP import Reader_bot

TOKEN = "1627632669:AAEQsLcFGxo89xeH5LuhqrYVTw-Mg8Gk3cU"

# create an instance of TeleBot class
bot = TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    # send the sticker
    sti = open("stickerCAT.webp", 'rb')
    bot.send_sticker(message.chat.id, sti)

    bot.send_message(message.chat.id, '–ó–¥–∞—Ä–æ–≤–∞. –ö–æ–Ω—Å–ø–µ–∫—Ç –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º? –ï—Å–ª–∏ —á—Ç–æ, –ø–∏—à–∏ "/notes"')


@bot.message_handler(commands=["notes"])
def ask_settings(message):
    if message.chat.type == 'private':
        question = """–Ø —Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å —É–º–Ω—ã–º - –º–Ω–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —É—á–µ–±–Ω–∏–∫–∞, –∞ —è —Å—á–∏—Ç–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–ø–∏—à—É –Ω–∞ –ª–∏—Å—Ç–æ—á–µ–∫.
–ù–æ –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—à—å –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, –ø—Ä–æ–±–ª–µ–º —Ç–æ–∂–µ –Ω–µ –±—É–¥–µ—Ç üòä/n P.S. —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞!"""
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton("–ö–∞—Ä—Ç–∏–Ω–∫–∞", callback_data='picture')
        item2 = types.InlineKeyboardButton("–¢–µ–∫—Å—Ç", callback_data='plain text')

        markup.add(item1, item2)

        bot.send_message(message.chat.id, question, reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–±–æ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π üò•")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
            if call.data == 'picture':
                bot.send_message(call.message.chat.id, "–ü—Ä–∏—Å—ã–ª–∞–π üëáüèª")

            elif call.data == 'plain text':
                bot.send_message(call.message.chat.id, "–ü—Ä–∏—Å—ã–ª–∞–π üëáüèª")

    except ValueError as e:
        bot.send_message(call.message.chat.id, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        sad_sti = open("stickerERROR.webp", 'rb')
        bot.send_sticker(call.message.chat.id, sad_sti)


@bot.message_handler(content_types=['document'])
def get_picture(message):
    try:
        chat_id = message.chat.id
        bot.send_message(chat_id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ —Å–µ–∫—É–Ω–¥—É ...")
        file_info = bot.get_file(message.document.file_id)
        name = file_info.file_path

        downloaded_file = bot.download_file(name)

        saved = "E:/PYTHON/fineReader_bot/received/" + message.document.file_name;

        with open(saved, 'wb') as new_file:
            new_file.write(downloaded_file)
        notes0 = Reader_bot()

        notes0.get_text(saved)
        notes0.prepare_text()
        notes0.put_text()

        # to send the result
        bot.send_photo(chat_id, notes0.image)


    except ValueError:

        bot.send_message(chat_id, """–ù–µ –º–æ–≥—É —Å—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ
    1. –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –ø—Ä—è–º—ã–º —É–≥–ª–æ–º
    2. –†–∞–∑–≥–ª–∞–¥—å—Ç–µ –±—É–º–∞–≥—É
    3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤""")
        sad_sti = open("stickerQ1.webp", 'rb')
        bot.send_sticker(chat_id, sad_sti)

    except IndexError:
        bot.send_message(chat_id, "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –ü—Ä–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –ø–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º")
        sad_stickers = ["stickerSURPRISED.webp", "stickerFROWN.webp", "stickerQ.webp", "stickerQ.webp",
                             "stickerQ1.webp", "stickerQ2.webp"]
        sad_sti = open(sad_stickers[randint(0, 5)], 'rb')
        bot.send_sticker(message.chat.id, sad_sti)

    except Exception as error:
         bot.send_message(chat_id, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
         sad_stickers = ["stickerSURPRISED.webp", "stickerFROWN.webp", "stickerQ.webp", "stickerQ.webp",
                         "stickerQ1.webp", "stickerQ2.webp"]
         sad_sti = open(sad_stickers[randint(0, 5)], 'rb')
         bot.send_sticker(message.chat.id, sad_sti)


@bot.message_handler(content_types=['text'])
def from_text(message):
    try:
        notes0 = Reader_bot()
        chat_id = message.chat.id

        notes0.prepare_text(message.text)
        notes0.put_text()

        # to send the result
        bot.send_photo(chat_id, notes0.image)

    except Exception as error:
        bot.send_message(chat_id, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        sad_stickers = ["stickerSURPRISED.webp", "stickerFROWN.webp", "stickerQ.webp", "stickerQ.webp",
                        "stickerQ1.webp", "stickerQ2.webp"]
        sad_sti = open(sad_stickers[randint(0, 5)], 'rb')
        bot.send_sticker(message.chat.id, sad_sti)


@bot.message_handler(content_types=['photo'])
def from_picture(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, '–§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∏—Å–ª–∞–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—Ñ–∞–π–ª"')
    bot.send_photo(chat_id, open("E:/PYTHON/fineReader_bot/SAMPLES/saveasfile.jpg", "rb"))

bot.polling()
